# ============================================================================
# POSTGRESQL MONO-APP INFRASTRUCTURE
# ============================================================================
# Infraestrutura PostgreSQL simples e reutilizável para qualquer projeto
#
# COMO USAR:
# 1. Clone este repositório na pasta do seu projeto
# 2. Configure as variáveis de ambiente (ver .env.example)
# 3. Execute: docker-compose up -d
#
# VARIÁVEIS OBRIGATÓRIAS:
# - APP_NAME: Nome da aplicação (usado para naming)
# - POSTGRES_PASSWORD: Senha do PostgreSQL
# - DB_NAME: Nome do banco da aplicação
# - DB_USER: Usuário do banco da aplicação
# - DB_PASSWORD: Senha do usuário da aplicação
# ============================================================================

services:
  postgres:
    image: postgres:15
    container_name: ${APP_NAME:-app}-postgres
    restart: unless-stopped
    environment:
      # Configurações principais do PostgreSQL
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}

      # Dados da aplicação (para inicialização)
      APP_DB_NAME: ${DB_NAME}
      APP_DB_USER: ${DB_USER}
      APP_DB_PASSWORD: ${DB_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - app_network
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-admin}']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    name: ${APP_NAME:-app}_postgres_data

networks:
  app_network:
    name: ${APP_NAME:-app}_network
    driver: bridge
