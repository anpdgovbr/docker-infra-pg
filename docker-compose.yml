# ============================================================================
# DOCKER COMPOSE H√çBRIDO - ANPD PostgreSQL Infrastructure
# ============================================================================
# Este arquivo funciona tanto para desenvolvimento local quanto GitOps/Portainer
#
# üè† MODO LOCAL:
#   - Use arquivo .env com APPS_CONFIG (formato completo)
#   - Execute: docker-compose up -d
#
# üöÄ MODO GITOPS:
#   - Configure environment variables no Portainer Stack
#   - Aplica√ß√µes definidas em config/apps.conf
#   - Execute: Use este mesmo arquivo no Portainer
# ============================================================================

services:
  postgres:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER_NAME:-anpd-postgres-dev}
    restart: always
    environment:
      # Configura√ß√µes principais
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_TIMEZONE: ${POSTGRES_TIMEZONE:-America/Sao_Paulo}

      # Senhas das aplica√ß√µes (para GitOps - ignoradas no modo local)
      BACKLOG_PASSWORD: ${BACKLOG_PASSWORD:-}
      CONTROLADORES_PASSWORD: ${CONTROLADORES_PASSWORD:-}
      # Adicione aqui senhas de novas apps conforme necess√°rio

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - postgres_network
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h localhost -p 5432 -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-postgres}'
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ${PGADMIN_CONTAINER_NAME:-anpd-pgadmin-dev}
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin-init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    ports:
      - '${PGADMIN_PORT:-8085}:80'
    networks:
      - postgres_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost/misc/ping'
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  init-runner:
    build:
      context: .
      dockerfile: Dockerfile.init-runner
    container_name: ${INIT_CONTAINER_NAME:-anpd-init-runner}
    environment:
      # For√ßar modo GitOps (defina GITOPS_MODE=true no Portainer)
      GITOPS_MODE: ${GITOPS_MODE:-false}

      # Auto-sync de bancos (defina AUTO_SYNC_DATABASES=true no Portainer)
      AUTO_SYNC_DATABASES: ${AUTO_SYNC_DATABASES:-false}

      # Para modo LOCAL (APPS_CONFIG com credenciais completas)
      APPS_CONFIG: ${APPS_CONFIG:-}

      # Para modo GITOPS (senhas individuais + config/apps.conf)
      BACKLOG_PASSWORD: ${BACKLOG_PASSWORD:-}
      CONTROLADORES_PASSWORD: ${CONTROLADORES_PASSWORD:-}

      # Configura√ß√µes do PostgreSQL (para auto-sync)
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}

      # Vari√°veis legadas (para compatibilidade - ser√£o removidas)
      BACKLOG_DB: ${BACKLOG_DB:-}
      BACKLOG_USER: ${BACKLOG_USER:-}
      BACKLOG_PASS: ${BACKLOG_PASS:-}
    volumes:
      - ./init:/app/init
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    restart: 'no'
    networks:
      - postgres_network

volumes:
  postgres_data:
    name: ${POSTGRES_VOLUME_NAME:-anpd_postgres_data}
  pgadmin_data:
    name: ${PGADMIN_VOLUME_NAME:-anpd_pgadmin_data}

networks:
  postgres_network:
    name: ${NETWORK_NAME:-anpd_postgres_network}
    driver: bridge
