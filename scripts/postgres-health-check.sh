#!/bin/bash
# ============================================================================
# DIAGN√ìSTICO DE SA√öDE DO POSTGRESQL
# ============================================================================
# Use este script para diagnosticar problemas de healthcheck do PostgreSQL

echo "üè• [postgres-health-check.sh] Diagn√≥stico de Sa√∫de do PostgreSQL"
echo "================================================================="
echo

# 1. Verificar se PostgreSQL est√° rodando
echo "1Ô∏è‚É£ Verificando se PostgreSQL est√° rodando..."
if pgrep postgres > /dev/null; then
    echo "   ‚úÖ Processo PostgreSQL encontrado"
    ps aux | grep postgres | grep -v grep
else
    echo "   ‚ùå Processo PostgreSQL N√ÉO encontrado"
    echo "   üí° PostgreSQL pode ainda estar inicializando"
fi
echo

# 2. Verificar conectividade b√°sica
echo "2Ô∏è‚É£ Verificando conectividade b√°sica..."
if pg_isready -h localhost -p 5432; then
    echo "   ‚úÖ PostgreSQL responde na porta 5432"
else
    echo "   ‚ùå PostgreSQL N√ÉO responde na porta 5432"
    echo "   üí° Verifique se o processo terminou de inicializar"
fi
echo

# 3. Verificar vari√°veis de ambiente
echo "3Ô∏è‚É£ Verificando vari√°veis de ambiente..."
echo "   POSTGRES_USER: ${POSTGRES_USER:-'‚ùå N√ÉO DEFINIDA'}"
echo "   POSTGRES_DB: ${POSTGRES_DB:-'‚ùå N√ÉO DEFINIDA'}"
echo "   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:+‚úÖ DEFINIDA}"
echo "   PGDATA: ${PGDATA:-'‚ùå N√ÉO DEFINIDA'}"
echo

# 4. Verificar se consegue conectar com credenciais
echo "4Ô∏è‚É£ Testando conex√£o com credenciais..."
if [[ -n "$POSTGRES_USER" && -n "$POSTGRES_PASSWORD" && -n "$POSTGRES_DB" ]]; then
    if PGPASSWORD="$POSTGRES_PASSWORD" psql -h localhost -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT version();" > /dev/null 2>&1; then
        echo "   ‚úÖ Conex√£o com credenciais OK"
        PGPASSWORD="$POSTGRES_PASSWORD" psql -h localhost -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT version();"
    else
        echo "   ‚ùå Falha na conex√£o com credenciais"
        echo "   üîç Tentando diagnosticar o erro:"
        PGPASSWORD="$POSTGRES_PASSWORD" psql -h localhost -p 5432 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT version();"
    fi
else
    echo "   ‚ö†Ô∏è  Vari√°veis de ambiente incompletas - pulando teste"
fi
echo

# 5. Verificar logs recentes
echo "5Ô∏è‚É£ Logs recentes do PostgreSQL (√∫ltimas 20 linhas)..."
if [[ -f "$PGDATA/log/postgresql.log" ]]; then
    tail -20 "$PGDATA/log/postgresql.log"
elif [[ -f "/var/log/postgresql/postgresql.log" ]]; then
    tail -20 "/var/log/postgresql/postgresql.log"
else
    echo "   ‚ÑπÔ∏è  Arquivo de log espec√≠fico n√£o encontrado"
    echo "   üí° Use 'docker logs <container-name>' para ver logs"
fi
echo

# 6. Verificar espa√ßo em disco
echo "6Ô∏è‚É£ Verificando espa√ßo em disco..."
df -h "$PGDATA" 2>/dev/null || df -h /var/lib/postgresql/data 2>/dev/null || df -h /
echo

# 7. Verificar arquivos cr√≠ticos
echo "7Ô∏è‚É£ Verificando arquivos cr√≠ticos..."
if [[ -f "$PGDATA/postgresql.conf" ]]; then
    echo "   ‚úÖ postgresql.conf encontrado"
else
    echo "   ‚ùå postgresql.conf N√ÉO encontrado"
fi

if [[ -f "$PGDATA/pg_hba.conf" ]]; then
    echo "   ‚úÖ pg_hba.conf encontrado"
else
    echo "   ‚ùå pg_hba.conf N√ÉO encontrado"
fi

if [[ -f "$PGDATA/postmaster.pid" ]]; then
    echo "   ‚úÖ postmaster.pid encontrado (PostgreSQL rodando)"
    cat "$PGDATA/postmaster.pid" | head -1 | xargs ps -p
else
    echo "   ‚ö†Ô∏è  postmaster.pid N√ÉO encontrado (PostgreSQL pode estar inicializando)"
fi
echo

echo "üèÅ Diagn√≥stico conclu√≠do!"
echo "üí° Se h√° problemas, verifique:"
echo "   - Logs do container: docker logs <container-name>"
echo "   - Vari√°veis de ambiente no Portainer"
echo "   - Espa√ßo em disco dispon√≠vel"
echo "   - Permiss√µes do volume de dados"
