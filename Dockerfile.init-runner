FROM alpine:3.19

WORKDIR /app

# Instala ferramentas essenciais
RUN apk add --no-cache bash coreutils

# Copia os arquivos necess√°rios
COPY scripts/ scripts/
COPY templates/ templates/
COPY config/ config/

# Garante que apps.conf existe (debug)
RUN ls -la config/ && \
    if [[ ! -f "config/apps.conf" ]]; then \
      echo "‚ùå apps.conf n√£o encontrado no build!"; \
      exit 1; \
    else \
      echo "‚úÖ apps.conf encontrado no build"; \
    fi

# Garante permiss√µes
RUN chmod +x scripts/*.sh

# Script que detecta o modo de opera√ß√£o
CMD echo 'üöÄ [Dockerfile] Container iniciado. Detectando modo de opera√ß√£o...' && \
    if [[ "$GITOPS_MODE" == "true" ]] || [[ -f "config/apps.conf" && -n "$BACKLOG_PASSWORD" ]]; then \
      echo 'üìã [Dockerfile] Modo GitOps detectado - usando apps.conf + environment variables' && \
      ls -la config/ && \
      bash scripts/generate-gitops-sql.sh && \
      bash scripts/generate-servers-json.sh; \
    elif [[ -f "config/apps.conf" ]]; then \
      echo 'üìã [Dockerfile] apps.conf encontrado mas senhas n√£o configuradas - usando modo local' && \
      bash scripts/generate-local-sql.sh; \
    else \
      echo 'üîß [Dockerfile] Modo local detectado - usando generate-local-sql.sh' && \
      bash scripts/generate-local-sql.sh; \
    fi && \
    echo '‚úÖ [Dockerfile] Execu√ß√£o de scripts conclu√≠da com sucesso.'
